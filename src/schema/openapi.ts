/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = Record<string, never>;

export type webhooks = Record<string, never>;

export type components = {
    schemas: {
        ModelThread: {
            /** @description The Model id (optional. Set to null to run all) */
            model_id?: string;
            /** @description The Modeling thread id */
            thread_id: string;
        };
        NewModelThread: {
            problem_statement: components["schemas"]["ProblemStatement"];
            task: components["schemas"]["Task"];
            thread: components["schemas"]["ThreadResponse"];
        };
        /** @description A Problem Statement definition */
        ProblemStatement: {
            /** @description The id of the problem statement (leave empty if creating a new problem statement) */
            id?: string;
            /** @description The name of the problem statement */
            name?: string;
            /** @description The top level region id of the problem statement (example south_sudan, ethiopia) */
            regionid?: string;
            time_period?: components["schemas"]["TimePeriod"];
        };
        /** @description A Task definition */
        Task: {
            /** @description The id of the task (leave empty if creating a new task) */
            id?: string;
            /** @description The SVO label for the indicator/response (link to list upcoming). Example: grain~dry__mass-per-area_yield */
            indicatorid?: string;
            /** @description The SVO label for the intervention (if any). Example: crop__planting_start_time */
            interventionid?: string;
            /** @description The name of the task */
            name?: string;
            /** @description The specific region id for the task (browse https://dev.mint.isi.edu/ethiopia/regions to get the ids) */
            regionid?: string;
            time_period?: components["schemas"]["TimePeriod"];
        };
        /** @description A Thread definition */
        ThreadResponse: {
            /** @description A map of input name and dataset ids. Example { cycles_weather_soil: ac34f01b-1484-4403-98ea-3a380838cab1 }. To browse the datasets, go here: http://localhost:8080/ethiopia/datasets/browse */
            datasets?: Record<string, string | string[]>;
            /** @description The model id to use (browse here: https://dev.mint.isi.edu/ethiopia/models/explore. Example: cycles-0.10.2-alpha-collection-oromia) */
            modelid?: string;
            /** @description The name of the thread (optional) */
            name?: string;
            /** @description A map of parameter name and parameter values. Example: { start_planting_day: [100, 107, 114] } */
            parameters?: Record<string, string | string[]>;
        };
        /** @description A time period */
        TimePeriod: {
            /** @description From date YYYY-MM-DD format */
            from?: string;
            /** @description to date YYYY-MM-DD format */
            to?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
};

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;

export type ModelThread = components["schemas"]["ModelThread"];
export type NewModelThread = components["schemas"]["NewModelThread"];
export type ProblemStatement = components["schemas"]["ProblemStatement"];
export type Task = components["schemas"]["Task"];
export type ThreadResponse = components["schemas"]["ThreadResponse"];
